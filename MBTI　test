<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>ÊÄßÊ†ºË®∫Êñ≠„ÉÜ„Çπ„ÉàÔºàMBTIÔºâ</title>
  <!-- OGP/Twitter meta„Çø„Ç∞ -->
  <meta property="og:title" content="ÊÄßÊ†ºË®∫Êñ≠„ÉÜ„Çπ„ÉàÔºàMBTIÔºâ">
  <meta property="og:description" content="32Âïè„ÅÆË≥™Âïè„Åß„ÅÇ„Å™„Åü„ÅÆMBTIÊÄßÊ†º„Çø„Ç§„Éó„ÇíË®∫Êñ≠ÔºÅ">
  <meta property="og:image" content="https://dummyimage.com/600x315/2196f3/fff&text=MBTI+Ë®∫Êñ≠">
  <meta property="og:url" content="https://example.com">
  <meta property="og:type" content="website">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="ÊÄßÊ†ºË®∫Êñ≠„ÉÜ„Çπ„ÉàÔºàMBTIÔºâ">
  <meta name="twitter:description" content="32Âïè„ÅÆË≥™Âïè„Åß„ÅÇ„Å™„Åü„ÅÆMBTIÊÄßÊ†º„Çø„Ç§„Éó„ÇíË®∫Êñ≠ÔºÅ">
  <meta name="twitter:image" content="https://dummyimage.com/600x315/2196f3/fff&text=MBTI+Ë®∫Êñ≠">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-XXXXXXXXX-X"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-XXXXXXXXX-X');
  </script>
  <style>
    /* ÁúÅÁï•ÔºàÂÖÉ„ÅÆ„Åæ„ÅæÔºâ */
    body {
      font-family: "Hiragino Sans", "Meiryo", sans-serif;
      background: #f4f4f9;
      margin: 0;
      padding: 20px;
      max-width: 820px;
      min-height: 100vh;
      margin: 0 auto;
    }
    h1 { text-align: center; margin-bottom: 30px; }
    .lang-switcher { text-align:right; margin-bottom:1rem;}
    .lang-btn { background: #eee; color:#333; border:none; border-radius:0.5rem; padding:0.3rem 1rem; margin-left:0.5rem; cursor:pointer;}
    .question-card {
      background: #fff;
      border-radius: 0.8rem;
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      margin-bottom: 2rem;
      padding: 1.2rem;
    }
    .question-card.unanswered { border:2px solid #d32f2f; background: #fff0f0;}
    .options { display: flex; gap: 10px; margin-top: 12px; }
    label.option-label {
      flex: 1;
      background: #e0f2f1;
      border-radius: 0.5rem;
      padding: 0.7rem 0.5rem;
      text-align: center;
      cursor: pointer;
      transition: background .2s, color .2s, transform 0.12s;
      outline: none;
      user-select: none;
    }
    input[type=radio]:checked + label.option-label {
      background: #2196F3;
      color: #fff;
    }
    label.option-label.animate {
      animation: option-press 0.18s;
    }
    @keyframes option-press {
      0% { transform: scale(1);}
      40% { transform: scale(0.93);}
      100% { transform: scale(1);}
    }
    .progress-bar-bg {
      width: 100%; height: 16px; background: #e0e0e0; border-radius: 8px; margin: 20px 0;
    }
    .progress-bar { height: 100%; border-radius: 8px; background: #4caf50; transition: width 0.4s; }
    #submitBtn, #resetBtn, .nav-btn {
      display: inline-block; margin: 30px 10px 0 10px;
      padding: 16px 40px; font-size: 1.15rem; border-radius: 0.8rem;
      border: none; color: #fff; background: #4caf50; cursor: pointer;
      transition: background .2s;
    }
    #resetBtn { background: #2196F3; margin-top: 16px; }
    .nav-btn { background: #888; }
    .nav-btn:disabled { background: #ccc; color: #fff; cursor: not-allowed; }
    .result-type-card {
      background: #fff;
      border-left: 7px solid #2196F3;
      border-radius: 0.8rem;
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
      padding: 1.2rem;
      margin-bottom: 2rem;
    }
    .share-btn {
      display: inline-block;
      margin: 0.5rem;
      padding: 0.7rem 1.6rem;
      background: #2196F3;
      color: #fff;
      border-radius: 0.5rem;
      text-decoration: none;
      font-size: 1.1rem;
      font-weight: bold;
      transition: background 0.2s;
      border: none;
      cursor: pointer;
    }
    .share-btn.x { background: #000; }
    .share-btn.line { background: #00c300; }
    .share-btn.facebook { background: #3b5998; }
    .share-btn.instagram { background: #e4405f; }
    .share-btn.threads { background: #222; }
    .share-btn.copy { background: #888; }
    .share-btn:hover { filter: brightness(0.92); }
    .error-message {
      color: #d32f2f;
      font-weight: bold;
      text-align: center;
      margin-bottom: 1.5rem;
    }
    @media (max-width:600px) {
      .options { flex-direction: column; }
      #submitBtn, #resetBtn, .nav-btn { width: 100%; margin: 10px 0; }
      .share-btn { width: 100%; margin: 0.5rem 0; }
    }
  </style>
</head>
<body>
  <h1>ÊÄßÊ†ºË®∫Êñ≠„ÉÜ„Çπ„Éà</h1>
  <div class="lang-switcher">
    <button class="lang-btn" onclick="switchLang('ja')">Êó•Êú¨Ë™û</button>
    <button class="lang-btn" onclick="switchLang('en')">English</button>
  </div>
  <div id="app"></div>
  <script>
    // --- Â§öË®ÄË™û„Éá„Éº„Çø ---
    const DATA = {
      ja: {
        questions: [
          { text: "‰∫∫„Å®„ÅÑ„Çã„Çà„Çä‰∏Ä‰∫∫„ÅÆÊôÇÈñì„ÅåÂ•Ω„Åç„Å†", img: "üåô", axis: "I" },
          { text: "ÂàùÂØæÈù¢„Åß„ÇÇ„Åô„Åê„Å´Êâì„Å°Ëß£„Åë„Çâ„Çå„Çã", img: "ü§ù", axis: "E" },
          { text: "Áâ©‰∫ã„ÇíÁõ¥ÊÑü„ÅßÊçâ„Åà„Çã„Åì„Å®„ÅåÂ§ö„ÅÑ", img: "üí°", axis: "N" },
          { text: "ÁèæÂÆüÁöÑ„ÅßÂÆüÁî®ÊÄß„ÇíÈáçË¶ñ„Åô„Çã", img: "üîß", axis: "S" },
          { text: "Ë´ñÁêÜÁöÑ„Å´ËÄÉ„Åà„Çã„ÅÆ„ÅåÂæóÊÑè„Å†", img: "üß†", axis: "T" },
          { text: "ÊÑüÊÉÖ„ÇÑÊ∞óÊåÅ„Å°„ÇíÈáçË¶ñ„Åô„Çã", img: "üíñ", axis: "F" },
          { text: "Ë®àÁîªÁöÑ„Å´Áâ©‰∫ã„ÇíÈÄ≤„ÇÅ„Çã", img: "üìÖ", axis: "J" },
          { text: "ÊüîËªü„Å´ÂØæÂøú„Åô„Çã„ÅÆ„ÅåÂæóÊÑè„Å†", img: "üåä", axis: "P" },
          { text: "Â§ß‰∫∫Êï∞„ÅÆÈõÜ„Åæ„Çä„ÅåÂ•Ω„Åç„Å†", img: "üéâ", axis: "E" },
          { text: "Á¥∞„Åã„ÅÑÈÉ®ÂàÜ„Å´Ê∞ó„Åå„Å§„Åè", img: "üîç", axis: "S" },
          { text: "Êñ∞„Åó„ÅÑ„Ç¢„Ç§„Éá„Ç¢„ÇíËÄÉ„Åà„Çã„ÅÆ„ÅåÊ•Ω„Åó„ÅÑ", img: "‚ú®", axis: "N" },
          { text: "‰∫∫„ÅÆÊ∞óÊåÅ„Å°„Å´ÊïèÊÑü„Å†", img: "üëÇ", axis: "F" },
          { text: "Áâ©‰∫ã„ÇíÂÆ¢Ë¶≥ÁöÑ„Å´Âà§Êñ≠„Åô„Çã", img: "‚öñÔ∏è", axis: "T" },
          { text: "Ê±∫Êñ≠„ÇíÂÖàÂª∂„Å∞„Åó„Å´„Åó„Åå„Å°„Å†", img: "‚è≥", axis: "P" },
          { text: "‰∫∫„Çí„Çµ„Éù„Éº„Éà„Åô„Çã„ÅÆ„ÅåÂ•Ω„Åç„Å†", img: "ü´Ç", axis: "F" },
          { text: "„É´„Éº„É´„ÇÑÊâãÈ†Ü„ÇíÂÆà„Çã", img: "üìè", axis: "J" },
          { text: "Ëá™ÂàÜ„ÅÆ‰∏ñÁïå„Å´Ê≤°È†≠„Åô„Çã„Åì„Å®„ÅåÂ§ö„ÅÑ", img: "üîÆ", axis: "I" },
          // ...ÔºàÁúÅÁï•„ÄÅÂÖÉ„ÅÆ„Åæ„ÅæÔºâ
        ],
        // ‚Üì‚Üì‚Üì ÂõûÁ≠î„Éú„Çø„É≥ÊñáË®Ä„ÇíÂ§âÊõ¥
        options: ["„ÅÇ„Å¶„ÅØ„Åæ„Çã","„ÇÑ„ÇÑ„ÅÇ„Å¶„ÅØ„Åæ„Çã","„Å©„Å°„Çâ„Åß„ÇÇ„Å™„ÅÑ","„ÅÇ„Åæ„Çä„ÅÇ„Å¶„ÅØ„Åæ„Çâ„Å™„ÅÑ","„ÅÇ„Å¶„ÅØ„Åæ„Çâ„Å™„ÅÑ"],
        next: "Ê¨°„ÅÆ„Éö„Éº„Ç∏",
        prev: "Ââç„ÅÆ„Éö„Éº„Ç∏",
        submit: "Ë®∫Êñ≠„Åô„Çã",
        reset: "„ÇÇ„ÅÜ‰∏ÄÂ∫¶Ë®∫Êñ≠„Åô„Çã",
        share: {
          x: "X„Åß„Ç∑„Çß„Ç¢",
          line: "LINE„Åß„Ç∑„Çß„Ç¢",
          facebook: "Facebook„Åß„Ç∑„Çß„Ç¢",
          instagram: "Instagram„Åß„Ç∑„Çß„Ç¢",
          copy: "ÁµêÊûú„Çí„Ç≥„Éî„Éº"
        },
        error: "„Åô„Åπ„Å¶„ÅÆË≥™Âïè„Å´ÂõûÁ≠î„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ",
        clear: "‰øùÂ≠ò„Éá„Éº„Çø„Çí„ÇØ„É™„Ç¢",
        resultNote: "‚ÄªMBTIË®∫Êñ≠„ÅØÊÄßÊ†º„ÅÆËâØ„ÅóÊÇ™„Åó„ÇíÊ±∫„ÇÅ„Çã„ÇÇ„ÅÆ„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ„ÅÇ„Å™„Åü„ÅÆÂÇæÂêë„ÇÑÂº∑„Åø„ÇíÁü•„Çã„Åü„ÇÅ„ÅÆÂèÇËÄÉ„Å®„Åó„Å¶„ÅîÊ¥ªÁî®„Åè„Å†„Åï„ÅÑ„ÄÇ",
        remain: n => `„ÅÇ„Å®${n}Âïè`,
        typeLabel: (mbti, name)=>`„ÅÇ„Å™„Åü„ÅÆMBTI„Çø„Ç§„Éó„ÅØ <span style="font-size:2rem">${mbti}</span> „Åß„Åô`
      },
      en: {
        // ...ÔºàÁúÅÁï•„ÄÅÂÖÉ„ÅÆ„Åæ„ÅæÔºâ
      }
    };

    // --- MBTI„Çø„Ç§„ÉóÊÉÖÂ†±ÔºàÁúÅÁï•„ÄÅÂÖÉ„ÅÆ„Åæ„ÅæÔºâ ---
    const MBTI_TYPES = { /* ...ÁúÅÁï•... */ };

    const QUESTIONS_PER_PAGE = 8;
    let answers = [];
    let currentPage = 0;
    let lang = "ja";
    let errorQuestions = [];
    let continued = false;

    // --- „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏ ---
    function saveProgress() {
      localStorage.setItem("mbti_answers", JSON.stringify(answers));
      localStorage.setItem("mbti_page", currentPage);
      localStorage.setItem("mbti_lang", lang);
    }
    function loadProgress() {
      answers = JSON.parse(localStorage.getItem("mbti_answers") || "[]");
      currentPage = parseInt(localStorage.getItem("mbti_page") || "0", 10);
      lang = localStorage.getItem("mbti_lang") || "ja";
    }
    function clearProgress() {
      localStorage.removeItem("mbti_answers");
      localStorage.removeItem("mbti_page");
      localStorage.removeItem("mbti_lang");
      answers = [];
      currentPage = 0;
      continued = false;
    }

    function switchLang(newLang) {
      lang = newLang;
      saveProgress();
      renderQuestions();
    }

    function renderQuestions() {
      const app = document.getElementById("app");
      app.innerHTML = "";
      const data = DATA[lang];

      const answeredCount = answers.filter(a => a !== undefined).length;
      app.innerHTML += `
        <div class="progress-bar-bg">
          <div class="progress-bar" style="width:${100*answeredCount/data.questions.length}%"></div>
        </div>
        <div style="text-align:right;color:#555;margin-bottom:16px;">
          ${data.remain(data.questions.length-answeredCount)}
        </div>
      `;
      if(errorQuestions.length) {
        app.innerHTML += `<div class="error-message">${data.error}</div>`;
      }
      const start = currentPage * QUESTIONS_PER_PAGE;
      const end = Math.min(start + QUESTIONS_PER_PAGE, data.questions.length);
      for(let i=start; i<end; i++) {
        const q = data.questions[i];
        app.innerHTML += `
          <div class="question-card${errorQuestions.includes(i)?' unanswered':''}" data-index="${i}">
            <div style="font-size:1.1rem;" id="q${i}_label">${i+1}. ${q.text} <span aria-hidden="true" style="font-size:1.5rem;">${q.img}</span></div>
            <div class="options" role="radiogroup" aria-labelledby="q${i}_label">
              ${[5,4,3,2,1].map(v => {
                const id = `q${i}_${v}`;
                const lbl = data.options[5-v];
                return `
                  <input type="radio" id="${id}" name="q${i}" value="${v}" ${answers[i]==v?"checked":""} style="display:none;">
                  <label class="option-label" for="${id}" tabindex="0">${lbl}</label>
                `;
              }).join('')}
            </div>
          </div>
        `;
      }
      let nav = `<div style="text-align:center;margin-top:24px;">`;
      if(currentPage > 0)
        nav += `<button class="nav-btn" onclick="prevPage()" type="button">${data.prev}</button> `;
      if(end < data.questions.length)
        nav += `<button class="nav-btn" onclick="nextPage()" type="button">${data.next}</button>`;
      else
        nav += `<button id="submitBtn" onclick="submitAnswers()" type="button">${data.submit}</button>`;
      nav += `</div>`;
      app.innerHTML += nav;

      document.querySelectorAll('.options input[type=radio]').forEach(input => {
        input.addEventListener('change', function() {
          const idx = parseInt(this.name.replace("q",""),10);
          answers[idx] = parseInt(this.value,10);
          saveProgress();
          const label = document.querySelector(`label[for="${this.id}"]`);
          if(label) {
            label.classList.remove('animate');
            void label.offsetWidth;
            label.classList.add('animate');
          }
        });
      });
      document.querySelectorAll('.option-label').forEach(label => {
        label.addEventListener('keydown', function(e) {
          if(e.key === " " || e.key === "Enter") {
            e.preventDefault();
            document.getElementById(label.htmlFor).checked = true;
            document.getElementById(label.htmlFor).dispatchEvent(new Event("change"));
          }
        });
        label.addEventListener('click', function() {
          label.classList.remove('animate');
          void label.offsetWidth;
          label.classList.add('animate');
        });
      });
    }
    function prevPage() {
      currentPage--;
      saveProgress();
      renderQuestions();
      window.scrollTo({top:0, behavior:"smooth"});
    }
    function nextPage() {
      currentPage++;
      saveProgress();
      renderQuestions();
      window.scrollTo({top:0, behavior:"smooth"});
    }
    function submitAnswers() {
      const data = DATA[lang];
      errorQuestions = [];
      for(let i=0;i<data.questions.length;i++) {
        if(answers[i] === undefined) errorQuestions.push(i);
      }
      if(errorQuestions.length) {
        renderQuestions();
        const first = document.querySelector('.question-card.unanswered');
        if(first) first.scrollIntoView({behavior:"smooth", block:"center"});
        return;
      }
      renderResult();
      window.scrollTo({top:0, behavior:"smooth"});
      gtag('event', 'submit', {event_category: 'MBTI', event_label: 'submit'});
    }
    function renderResult() {
      const app = document.getElementById("app");
      const data = DATA[lang];
      const questions = data.questions;
      const axes = {E:0,I:0,N:0,S:0,T:0,F:0,J:0,P:0}, counts = {E:0,I:0,N:0,S:0,T:0,F:0,J:0,P:0};
      questions.forEach((q,i) => {
        axes[q.axis] += answers[i];
        counts[q.axis]++;
      });
      function axisLetter(pos,neg) {
        const diff = (axes[pos]/counts[pos]) - (axes[neg]/counts[neg]);
        return diff > 0 ? pos : neg;
      }
      const mbti = axisLetter("E","I") + axisLetter("N","S") + axisLetter("T","F") + axisLetter("J","P");
      const detail = MBTI_TYPES[mbti]; // ÂøÖ„Åö16„Çø„Ç§„Éó„ÅßÂüã„Åæ„Å£„Å¶„ÅÑ„Çã
      function axisBar(pos,neg,color) {
        const posAvg = axes[pos]/counts[pos], negAvg = axes[neg]/counts[neg];
        const percent = Math.round(100 * (posAvg / (posAvg+negAvg)));
        return `
          <div>
            <div style="display:flex;justify-content:space-between;font-size:0.98rem;">
              <span>${pos}</span><span>${neg}</span>
            </div>
            <div class="progress-bar-bg">
              <div class="progress-bar" style="width:${percent}%;background:${color};"></div>
            </div>
            <div style="text-align:center;font-size:0.93rem;">${percent}% ${pos} / ${100-percent}% ${neg}</div>
          </div>
        `;
      }
      const shareText = lang==="ja" ? `ÁßÅ„ÅÆMBTIË®∫Êñ≠ÁµêÊûú„ÅØ${mbti}Ôºà${detail.name.ja}Ôºâ„Åß„Åó„ÅüÔºÅ` : `My MBTI result is ${mbti} (${detail.name.en})!`;
      const shareUrl = location.href.split('?')[0]+'?result='+mbti+'&lang='+lang;
      app.innerHTML = `
        <h2 style="text-align:center;">${data.typeLabel(mbti, detail.name[lang])}</h2>
        <div class="result-type-card">
          <h3>${detail.name[lang]}Ôºà${mbti}Ôºâ</h3>
          <div>${detail.desc[lang]}</div>
          <div><b>${lang==="ja"?"Âº∑„Åø":"Strengths"}Ôºö</b>${detail.strengths[lang]}</div>
          <div><b>${lang==="ja"?"Âº±„Åø":"Weaknesses"}Ôºö</b>${detail.weaknesses[lang]}</div>
          <div><b>${lang==="ja"?"Âêë„ÅÑ„Å¶„ÅÑ„Çã‰ªï‰∫ã":"Jobs"}Ôºö</b>${detail.jobs[lang]}</div>
          <div><b>${lang==="ja"?"ÊúâÂêç‰∫∫‰æã":"Famous"}Ôºö</b>${detail.famous[lang]}</div>
        </div>
        <div style="max-width:600px;margin:0 auto 2.5rem;">
          ${axisBar("E","I","#2196F3")}
          ${axisBar("N","S","#8bc34a")}
          ${axisBar("T","F","#ff9800")}
          ${axisBar("J","P","#9c27b0")}
        </div>
        <div style="text-align:center;margin:2rem 0;">
          <button id="resetBtn" onclick="resetAll()">${data.reset}</button>
        </div>
        <div style="text-align:center;">
          <a class="share-btn x" href="https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(shareUrl)}" target="_blank">${data.share.x}</a>
          <a class="share-btn line" href="https://social-plugins.line.me/lineit/share?url=${encodeURIComponent(shareUrl)}" target="_blank">${data.share.line}</a>
          <a class="share-btn facebook" href="https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}" target="_blank">${data.share.facebook}</a>
          <button class="share-btn instagram" onclick="copyToClipboard('${shareText}\\n${shareUrl}','${lang==="ja"?"Instagram„Å´Ë≤º„Çä‰ªò„Åë„Å¶„Ç∑„Çß„Ç¢„Åó„Å¶„Åè„Å†„Åï„ÅÑ":"Copy and paste to Instagram"}');return false;">${data.share.instagram}</button>
          <button class="share-btn copy" onclick="copyToClipboard('${shareText}\\n${shareUrl}','${lang==="ja"?"ÁµêÊûú„Çí„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü":"Copied!"}');return false;">${data.share.copy}</button>
        </div>
        <div style="text-align:center;margin-top:1.5rem;color:#888;font-size:0.95rem;">
          ${data.resultNote}
        </div>
      `;
      history.replaceState(null,null,`?result=${mbti}&lang=${lang}`);
      window.scrollTo({top:0, behavior:"smooth"}); // ‚òÖËøΩÂä†
    }
    function copyToClipboard(text, alertMsg) {
      if(navigator.clipboard) {
        navigator.clipboard.writeText(text).then(()=>{ alert(alertMsg); });
      } else {
        const t = document.createElement("textarea");
        t.value = text;
        document.body.appendChild(t);
        t.select();
        document.execCommand("copy");
        document.body.removeChild(t);
        alert(alertMsg);
      }
    }
    function resetAll() {
      clearProgress();
      renderQuestions();
      window.scrollTo({top:0, behavior:"smooth"});
    }
    function checkResultParam() {
      const params = new URLSearchParams(location.search);
      const result = params.get("result");
      lang = params.get("lang") || "ja";
      if(result && MBTI_TYPES[result]) {
        const app = document.getElementById("app");
        const data = DATA[lang];
        const detail = MBTI_TYPES[result];
        const shareText = lang==="ja" ? `ÁßÅ„ÅÆMBTIË®∫Êñ≠ÁµêÊûú„ÅØ${result}Ôºà${detail.name.ja}Ôºâ„Åß„Åó„ÅüÔºÅ` : `My MBTI result is ${result} (${detail.name.en})!`;
        const shareUrl = location.href;
        app.innerHTML = `
          <h2 style="text-align:center;">${data.typeLabel(result, detail.name[lang])}</h2>
          <div class="result-type-card">
            <h3>${detail.name[lang]}Ôºà${result}Ôºâ</h3>
            <div>${detail.desc[lang]}</div>
            <div><b>${lang==="ja"?"Âº∑„Åø":"Strengths"}Ôºö</b>${detail.strengths[lang]}</div>
            <div><b>${lang==="ja"?"Âº±„Åø":"Weaknesses"}Ôºö</b>${detail.weaknesses[lang]}</div>
            <div><b>${lang==="ja"?"Âêë„ÅÑ„Å¶„ÅÑ„Çã‰ªï‰∫ã":"Jobs"}Ôºö</b>${detail.jobs[lang]}</div>
            <div><b>${lang==="ja"?"ÊúâÂêç‰∫∫‰æã":"Famous"}Ôºö</b>${detail.famous[lang]}</div>
          </div>
          <div style="text-align:center;margin:2rem 0;">
            <button id="resetBtn" onclick="resetAll()">${data.reset}</button>
          </div>
          <div style="text-align:center;">
            <a class="share-btn x" href="https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(shareUrl)}" target="_blank">${data.share.x}</a>
            <a class="share-btn line" href="https://social-plugins.line.me/lineit/share?url=${encodeURIComponent(shareUrl)}" target="_blank">${data.share.line}</a>
            <a class="share-btn facebook" href="https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}" target="_blank">${data.share.facebook}</a>
            <button class="share-btn instagram" onclick="copyToClipboard('${shareText}\\n${shareUrl}','${lang==="ja"?"Instagram„Å´Ë≤º„Çä‰ªò„Åë„Å¶„Ç∑„Çß„Ç¢„Åó„Å¶„Åè„Å†„Åï„ÅÑ":"Copy and paste to Instagram"}');return false;">${data.share.instagram}</button>
            <button class="share-btn copy" onclick="copyToClipboard('${shareText}\\n${shareUrl}','${lang==="ja"?"ÁµêÊûú„Çí„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü":"Copied!"}');return false;">${data.share.copy}</button>
          </div>
        `;
        window.scrollTo({top:0, behavior:"smooth"}); // ‚òÖËøΩÂä†
        return true;
      }
      return false;
    }

    window.onload = function(){
      if(checkResultParam()) return;
      loadProgress();
      renderQuestions();
    };
  </script>
</body>
</html>
